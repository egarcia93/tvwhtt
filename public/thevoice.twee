:: StoryData
{
    "ifid": "F2277A49-95C9-4B14-AE66-62526089F861",
    "format": "SugarCube",

    "format-version": "2.35.0",
    "start": "Start"
}

:: StoryTitle
The voice we hear through time

:: StoryInit

<<cacheaudio "song" "data/track.wav" >>
 
/* <<script>>

var audio = document.createElement('audio');
audio.src = 'data/track.wav';

audio.loop = true;
window.onclick = function(event){
	audio.play();
  console.log("hir");

}
<</script>> */

:: Start [start]

<<audio "song" play>>
<<script>>
UIBar.destroy();
<</script>>


[img['data/SpinningMaze.gif'][Departure]]
<span class=anima_odd>''The''</span> <span class=anima_even>''voice''</span> <span class=anima_odd>''we''</span><span class=anima_even> ''hear''</span> <span class=anima_odd>''through''</span><span class=anima_even> ''time''</span>&nbsp;

:: Departure [departure]
<<script>>
UIBar.destroy();
<</script>>

A seamless  room, filled with hexagon tiles. 
You feel like floating and still.
Nobody around you, no one can hear you.

YOU start to dissolve

<span class=appear_1>YOU</span>

<span class=appear_2>YO</span>

<span class=appear_3>[[Y|Alone]]</span>

:: Alone
<<script>>
UIBar.destroy();
<</script>>

Alone, again...
That soft feeling surrounding you
Here ''[[NOBODY|AloneRoom]]'' can hurt you
Out of the reach of any danger from the outside
Just you...

You and the darkness...

<div class=reveal>
Is it just you?

Do you want to [[go out|Waiting]] or you are willing to get [[going|RabbitHole]]

</div>

:: AloneRoom
<<script>>
UIBar.destroy();
<</script>>
<div class=candle>
[img['data/Candle.gif'][Alone]]
</div>

:: Waiting
<<script>>
UIBar.destroy();
<</script>>
You are stil trapped [[here|AloneRoom]] the best will be to face the danger and [[keep going|RabbitHole]]

:: RabbitHole [hole]
<<script>>
UIBar.destroy();
<</script>>


<script>
  // Accepts any class name
  var rellax = new Rellax('.rellax');
</script>


<article class="content">
      <div class="one rellax" data-rellax-speed="5">You</div>
      <div class="two">are</div>
      <div class="three rellax" data-rellax-speed="-5">falling</div>
    </article>

<footer class=door>
  <p >What is behind the [[door|Tunnel]]</p>
</footer>

:: Tunnel [tunnel]
<<script>>
UIBar.destroy();
<</script>>
<a data-passage="Forking">
<svg xmlns:svg="http://www.w3.org/2000/svg" xmlns="http://www.w3.org/2000/svg" width="100%" heihgt="100%" viewBox="0 150 744 1052" id="svg2"  version="1">
   
     <path  id= "MyPath" stroke-dashoffset="6265" stroke-dasharray="6265" d="m351 487c0 8-11 4-14-1-6-11 4-24 15-27 19-5 37 11 40 30 4 27-18 50-44 53-35 4-64-25-66-59-3-42 32-77 73-79 50-3 90 39 92 88 2 57-46 104-102 105-65 2-117-53-119-117-1-72 60-131 131-132 80-1 144 67 145 146 1 87-74 158-160 158-95 0-171-81-171-175 0-102 88-185 190-184 110 1 198 95 197 204C557 615 456 709 340 708 215 706 115 598 117 475 119 342 233 236 364 238 504 240 616 361 614 500 611 648 484 766 337 763 182 760 58 626 61 472 65 309 206 179 367 183c170 4 306 151 302 320-4 178-158 319-335 315" style="fill:none;stroke:#f00" stroke-width="2">
	 <animate attributeName="stroke-dashoffset" values="6265;0;6265;0" dur="20s" fill="freeze"/> 
	 </path>



  <text id="MyText" font-family="Verdana" font-size="50" fill="white" >
    <textPath xlink:href="#MyPath" >
    Hold on to this red twine
    Hold to your memories and tak a step further
    Don't look back
    Maybe it was days..
    Months....
    Even years...
    Since you got here
    Remember and look through

    </textPath>
    </text>
   </svg>
</a>
:: Forking
<<script>>
UIBar.destroy();
<</script>>

[[E|Link]] [[n|Link]] [[t|Link]] [[e|Link]] [[r|Link]] [[i|Link]] [[n|Link]] [[g|Link]] blindfolded to a garden of forked paths ,
Every wall is different, 
there is no distiction at all.
<<set $counter to 0>>


:: Link
<<script>>
UIBar.destroy();
<</script>>

<<goto `either("Light Green", "White", "Red","Grey","Blue","Black","Saffron","Yellow")`>>

:: Light Green [green]

<<script>>
UIBar.destroy();
<</script>>

<<set $counter to $counter + 1>>
<<if $counter is 4>><<goto "Oratory">><</if>>

[[Romance|LinkG]]

:: LinkG [green]

<<script>>
UIBar.destroy();
<</script>>


<<goto `either("White", "Red","Grey","Blue","Black","Saffron","Yellow")`>>

:: White [white]

<<script>>
UIBar.destroy();
<</script>>

<<set $counter to $counter + 1>>
<<if $counter is 4>><<goto "Oratory">><</if>>
[[Comedy|LinkW]]

:: LinkW [white]

<<script>>
UIBar.destroy();
<</script>>

<<goto `either("Light Green", "Red","Grey","Blue","Black","Saffron","Yellow")`>>


:: Red [red]

<<script>>
UIBar.destroy();
<</script>>

<<set $counter to $counter + 1>>
<<if $counter is 4>><<goto "Oratory">><</if>>
[[Fury|LinkR]]

:: LinkR [red]

<<script>>
UIBar.destroy();
<</script>>

<<goto `either("Light Green", "White","Grey","Blue","Black","Saffron","Yellow")`>>


:: Grey [grey]

<<script>>
UIBar.destroy();
<</script>>

<<set $counter to $counter + 1>>
<<if $counter is 4>><<goto "Oratory">><</if>>
[[Compassion|LinkGr]]

:: LinkGr [grey]

<<script>>
UIBar.destroy();
<</script>>

<<goto `either("Light Green", "White", "Red","Blue","Black","Saffron","Yellow")`>>

:: Blue [blue]

<<script>>
UIBar.destroy();
<</script>>

<<set $counter to $counter + 1>>
<<if $counter is 4>><<goto "Oratory">><</if>>
[[Disgust|LinkB]]

:: LinkB [blue]

<<script>>
UIBar.destroy();
<</script>>

<<goto `either("Light Green", "White", "Red","Grey","Black","Saffron","Yellow")`>>

:: Black [black]

<<script>>
UIBar.destroy();
<</script>>

<<set $counter to $counter + 1>>
<<if $counter is 4>><<goto "Oratory">><</if>>
[[Horror|LinkBl]]

:: LinkBl [black]

<<script>>
UIBar.destroy();
<</script>>

<<goto `either("Light Green", "White", "Red","Grey","Blue","Saffron","Yellow")`>>

:: Saffron [saffron]

<<script>>
UIBar.destroy();
<</script>>

<<set $counter to $counter + 1>>
<<if $counter is 4>><<goto "Oratory">><</if>>
[[Heroism|LinkS]]

:: LinkS [saffron]

<<script>>
UIBar.destroy();
<</script>>

<<goto `either("Light Green", "White", "Red","Grey","Blue","Black","Yellow")`>>

:: Yellow [yellow]

<<script>>
UIBar.destroy();
<</script>>

<<set $counter to $counter + 1>>
<<if $counter is 4>><<goto "Oratory">><</if>>
[[Wonder|LinkY]]

:: LinkY [yellow]

<<script>>
UIBar.destroy();
<</script>>

<<goto `either("Light Green", "White", "Red","Grey","Blue","Black","Saffron")`>>



:: Oratory

<<script>>
UIBar.destroy();
<</script>>



<input id= "oratory-input" placeholder="Write here">

<<link [[Go on|Alert]] >>

<<script>>
      
       let message =  document.getElementById('oratory-input').value;
      console.log(message);
       let theMessage ={
         "message": message

       }
      let jsonData = JSON.stringify(theMessage);

      fetch('/send',{
        method: 'POST',
        headers:{
          "Content-type": "application/json"
        },
        body: jsonData
      })
      .then(response=>response.json())
      .then(response =>{
        //console.log("response");
      });
     
 

<</script>>

<</link>>

:: Alert [alert]

<<script>>
UIBar.destroy();
<</script>>


There is something behind those walls
Is it footsteps?
Maybe voices?
It was a <span class="shakey">growl</span>
<div id="alert"></div>
<span id = "run">[[RUN|Tangled]]</span>



<<script>>

  let flag = false ;
  let timerId;
  let running = false ;
  timerId = setTimeout(run, 3000);
  console.log("starting timer");
  window.addEventListener('mousemove',stop);


function stop(){
  if(!flag&&!running){
     //clearTimeout(timerId);
      //timerId = setTimeout(run, 5000);
      //console.log("starting timer");
      var para = document.createElement("p");
      var node = document.createTextNode("Do not move");
      para.appendChild(node);
      var element = document.getElementById("alert");
      element.appendChild(para);
      flag= true;
  //dont move appear
  };
    
      console.log("moving")
     
      flag = false;

}

function run(){
    running = true;
    
    console.log("RUN");
   
    var element = document.getElementById("run");
      element.style.visibility = "visible";
      flag= true;
    
    //Run appear [[RUN|Tangled]]
  };


 

<</script>>

:: Tangled[tangled]

<<script>>
UIBar.destroy();
<</script>>

&emsp;&emsp;&emsp;&emsp;&emsp;  Se[[e|Alert]]ms &emsp;&emsp;&emsp;&emsp;&emsp; like 
&emsp;&emsp;&emsp;you&emsp;&emsp;&emsp;&emsp;&emsp;[[a|Door]]re
&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;[[t|Rest]]angled &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;up
 

:: Door [doors]
<<script>>
UIBar.destroy();
<</script>>

 Are you looking for an [[exit->Door1]]?

:: Door1 [door1]
<<script>>
UIBar.destroy();
<</script>>

There is something you must [[know->Door2]]

:: Door2 [door2]
<<script>>
UIBar.destroy();
<</script>>

There is [[no...->Door3]]

:: Door3 [door3]
<<script>>
UIBar.destroy();
<</script>>

[[EXIT->Alert]]

:: Rest
<<script>>
UIBar.destroy();
<</script>>

Stop there
Take a break
Maybe the maze is inside?
The door will not open in some time

<span class="breath">Just breathe</span>

<span class="appear_4">[[Lets go|String]]</span>

:: String 


<<script>>
UIBar.destroy();

<</script>>


[[Pull the string|The Hall]]
   
:: The Hall
<a data-passage="Credits"><ul id="messages"></ul></a>
<<script>>
UIBar.destroy();
<</script>>
 <<script>>
    let messageArray;
        fetch('/find',{
          method: 'GET',
          headers:{
            "Content-type": "application/json"
          },
          
        })
        .then(response=>response.json())
        .then(response =>{
          //console.log("response");
          messageArray = response;
          console.log(messageArray);
          for(let i = 0 ; i<messageArray.length; i++){
            var para = document.createElement("li");
            var node = document.createTextNode(messageArray[i].message);
            para.appendChild(node);
            var element = document.getElementById("messages");
            element.appendChild(para);
          }
        });
<</script>>
:: Credits
<<script>>
UIBar.destroy();
<</script>>


By <a href="http://www.egarciaa.com">Enrique García-Alcalá</a>

[[Restart|Start]]





:: Styles [stylesheet]

body{
    background: black;
    font-family: courier;
}

@keyframes fade-in-out {
	0%,
	to {opacity: 0}
	50% {opacity: 1}
}

@keyframes fade-in {
	from {opacity:0},
	to {opacity: 1}
  
}
.anima_even {
  
  animation-name: fade-in-out;
  animation: fade-in-out 5s ease-in-out infinite alternate;
	-webkit-animation: fade-in-out 5s ease-in-out infinite alternate;
}

.anima_odd {
  
  animation-name: fade-in-out;
  animation: fade-in-out 6s ease-in-out infinite alternate;
	-webkit-animation: fade-in-out 6s ease-in-out infinite alternate;
}
.appear_1{
  animation-name: fade-in;
  animation: fade-in linear 10s;
  font-size: 30px;
 
}

.appear_2{
  animation-name: fade-in;
  animation: fade-in linear 12s;  
   font-size: 40px;
 
}

.appear_3{
  animation-name: fade-in;
  animation: fade-in linear 14s; 
   font-size: 50px; 
 
}

.appear_4{
  animation-name: fade-in;
  animation: fade-in linear 20s; 
   font-size: 25px; 
 
}

img{
    width: 45%;
    height: 45%;
    display: block;
    margin-left: auto;
    margin-right: auto;
    margin-bottom: 0px;
    }

.start{
  font-size: 20px;
  
}

.reveal{
  opacity: 0
}

.reveal:hover{
  
  opacity:1;
  transition:opacity 2s;
  
}

.candle{
  opacity: 75%;
  filter: brightness(0.6);
}

.content {
  align-items: center;
  display: flex;
  height: 50vh;
  justify-content: center;
  margin: 20px;
  max-width: 100%;
  width: 100vw;
}


div.hole{
  margin: 20px;
  font-size: 36px;
  border-size:20px;
}
.one {
  background-color: #364996 ;
}

.two {
  background-color: #253368;
}

.three {
  background-color: #1d2554;
}

.hole{
  height: 300vh;
}

.door{
position: absolute;
  bottom: 8px;
  right: 16px;
  font-size: 18px;
  top: 300vh;
}

.tunnel{
  
   
    margin-left: auto;
    margin-right: auto;
    margin-bottom: auto;
    margin-top:100px;
    align-items: center;
     display: flex;
 
  justify-content: center;
}

.green{

  background-color: green;
}

.white{
  background-color: white;

}

.red{
  background-color:red;

}

.grey{
  background-color:grey;
}

.blue{
  background-color: blue;
}

.black{
  background-color:black;
}

.saffron{
  background-color:#f93;

}

.yellow{
  background-color:yellow;
}

#run{
  visibility: hidden;
  font-size: 50px;

}

.tangled{
  
  font-size: 35px;
  margin-left: auto;
}

.doors{

  font-size: 50px;
  letter-spacing: 10px;



}

.door1{

  font-size : 60px;
  letter-spacing: 5px;

}

.door2{

  font-size : 70px;
  letter-spacing: 1px;

}

.door3{
  font-size: 100px;
  letter-spacing: -25px;
}

#svg2 {
    width: 100%;
    height: 45%;
    display: block;
    margin-left: auto;
    margin-right: auto;

    
    -webkit-animation: rotation 80s infinite linear;
    -moz-animation: rotation 80s infinite linear;
    -o-animation: rotation 80s infinite linear;
    animation: rotation 80s infinite linear;
    transform-origin: 50% 50%;
    -webkit-transform-origin: 50% 50%;
    -moz-transform-origin: 50% 50%;
}

@-webkit-keyframes rotation {
    from {-webkit-transform: rotate(0deg);}
    to   {-webkit-transform: rotate(359deg);}
}
@-moz-keyframes rotation {
    from {-moz-transform: rotate(0deg);}
    to   {-moz-transform: rotate(359deg);}
}
@-o-keyframes rotation {
    from {-o-transform: rotate(0deg);}
    to   {-o-transform: rotate(359deg);}
}
@keyframes rotation {
    from {transform: rotate(0deg);}
    to   {transform: rotate(359deg);}
}
@keyframes shake {
  10%, 90% {
    transform: translate3d(-1px, 0, 0);
  }
  
  20%, 80% {
    transform: translate3d(2px, 0, 0);
  }

  30%, 50%, 70% {
    transform: translate3d(-4px, 0, 0);
  }

  40%, 60% {
    transform: translate3d(4px, 0, 0);
  }
}
.shakey{
  color: gray;
}
.shakey:hover{
  animation: shake 0.82s cubic-bezier(.36,.07,.19,.97) both;
  transform: translate3d(0, 0, 0);
  backface-visibility: hidden;
  perspective: 1000px;
  font-size: 300px;
}

ul {
  box-sizing: border-box;
  overflow: hidden;
  perspective: 900px;
  list-style: none;
  height: 70vh;
  max-height: 1200px;
  min-height: 750px;
  text-align: center;
  margin-top: 0px;
  margin-bottom: 0px;
}

@keyframes width-sway {
  0%, 100% {
    width: 500px;
  }
  50% {
    width: 100%;
  }
}
li {
  position: absolute;
  top: 0;
  width: 100%;
  transform: translateY(100vh);
  font-size: 2.4em;
  font-weight: bold;
  animation: 12s spiral-staircase linear infinite;
}

li:nth-child(1) {
  animation-delay: 0s;
}

li:nth-child(2) {
  animation-delay: 2s;
}

li:nth-child(3) {
  animation-delay: 3s;
}

li:nth-child(4) {
  animation-delay: 4s;
}

li:nth-child(5) {
  animation-delay: 5s;
}

li:nth-child(6) {
  animation-delay: 6s;
}

li:nth-child(7) {
  animation-delay: 7s;
}

li:nth-child(8) {
  animation-delay: 8s;
}

li:nth-child(9) {
  animation-delay: 9s;
}

li:nth-child(10) {
  animation-delay: 10s;
}

li:nth-child(11) {
  animation-delay: 11s;
}

li:nth-child(12) {
  animation-delay: 12s;
}

li:nth-child(1) {
  right: 1rem;
}

li:nth-last-child(1) {
  right: 1rem;
}

li:nth-child(2) {
  right: 2rem;
}

li:nth-last-child(2) {
  right: 2rem;
}

li:nth-child(3) {
  right: 3rem;
}

li:nth-last-child(3) {
  right: 3rem;
}

li:nth-child(4) {
  right: 4rem;
}

li:nth-last-child(4) {
  right: 4rem;
}

li:nth-child(5) {
  right: 5rem;
}

li:nth-last-child(5) {
  right: 5rem;
}

li:nth-child(6) {
  right: 6rem;
}

li:nth-last-child(6) {
  right: 6rem;
}

@keyframes spiral-staircase {
  0% {
    transform: rotateY(90deg) translateY(105vh) rotate(0deg);
  }
  50% {
    transform: rotateY(0deg) translateY(50vh) rotate(0deg);
  }
  100% {
    transform: rotateY(-90deg) translateY(-5vh) rotate(0deg);
  }
}

#story{
  margin-top: 0px;
  margin-bottom: 0px;
}

