:: StoryData
{
    "ifid": "F2277A49-95C9-4B14-AE66-62526089F861",
    "format": "SugarCube",

    "format-version": "2.35.0",
    "start": "Start"
}

:: StoryTitle
The voice we hear through time

:: StoryInit

<<cacheaudio "song" "data/track.wav" >>
 
/* <<script>>

var audio = document.createElement('audio');
audio.src = 'data/track.wav';

audio.loop = true;
window.onclick = function(event){
	audio.play();
  console.log("hir");

}
<</script>> */

:: Start [start]

<<audio "song" play>>
<<script>>
UIBar.destroy();
<</script>>


[img['data/SpinningMaze.gif'][Departure]]
<span class=anima_odd>''The''</span> <span class=anima_even>''voice''</span> <span class=anima_odd>''we''</span><span class=anima_even> ''hear''</span> <span class=anima_odd>''through''</span><span class=anima_even> ''time''</span>&nbsp;

:: Departure [departure]
<<script>>
UIBar.destroy();
<</script>>

A seamless  room, filled with hexagon tiles. 
You feel like floating and still,
nobody around you, no one can hear you.

YOU start to dissolve

<span class=appear_1>YOU</span>

<span class=appear_2>YO</span>

<span class=appear_3>[[Y|Alone]]</span>

:: Alone
<<script>>
UIBar.destroy();
<</script>>

Alone,
Alone, again...
That soft feeling surrounding you
The tenderness of the ice cold loneliness.
But you know ''[[NOBODY|AloneRoom]]'' can hurt you
Out of the reach of any danger,
Out of the sight of anybody,
Out of everywhere.
Just you...

You and the darkness...

<div class=reveal>
Is it just you?

You start to wander around, and suddenly stop.
Should you  [[go out|Waiting]] or you are willing to keep [[going?|RabbitHole]]

</div>

:: AloneRoom
<<script>>
UIBar.destroy();
<</script>>
<div class=candle>
[img['data/Candle.gif'][Alone]]
</div>

:: Waiting
<<script>>
UIBar.destroy();
<</script>>
Still trapped [[here|AloneRoom]] 
And will always be, unless  you [[keep going.|RabbitHole]]

:: RabbitHole [hole]
<<script>>
UIBar.destroy();
<</script>>


<script>
  // Accepts any class name
  var rellax = new Rellax('.rellax');
</script>


<article class="content">
      <div class="one rellax" data-rellax-speed="5">You</div>
      <div class="two">are</div>
      <div class="three rellax" data-rellax-speed="-5">falling</div>
    </article>

<footer class=door>
  <p >What is behind the [[door?|Tunnel]]</p>
</footer>

:: Tunnel [tunnel]
<<script>>
UIBar.destroy();
<</script>>
<a data-passage="Forking">
<svg xmlns:svg="http://www.w3.org/2000/svg" xmlns="http://www.w3.org/2000/svg" width="100%" heihgt="100%" viewBox="0 150 744 1052" id="svg2"  version="1">
   
     <path  id= "MyPath" stroke-dashoffset="6265" stroke-dasharray="6265" d="m351 487c0 8-11 4-14-1-6-11 4-24 15-27 19-5 37 11 40 30 4 27-18 50-44 53-35 4-64-25-66-59-3-42 32-77 73-79 50-3 90 39 92 88 2 57-46 104-102 105-65 2-117-53-119-117-1-72 60-131 131-132 80-1 144 67 145 146 1 87-74 158-160 158-95 0-171-81-171-175 0-102 88-185 190-184 110 1 198 95 197 204C557 615 456 709 340 708 215 706 115 598 117 475 119 342 233 236 364 238 504 240 616 361 614 500 611 648 484 766 337 763 182 760 58 626 61 472 65 309 206 179 367 183c170 4 306 151 302 320-4 178-158 319-335 315" style="fill:none;stroke:#f00" stroke-width="2">
	 <animate attributeName="stroke-dashoffset" values="6265;0;6265;0" dur="20s" fill="freeze"/> 
	 </path>



  <text id="MyText" font-family="Verdana" font-size="50" fill="white" >
    <textPath xlink:href="#MyPath" >
    Hold on to this red twine,
    hold it with all your strenght.
    Use it to get out,
    leave  your memories and then
    don't look back.
    Look through.

    </textPath>
    </text>
   </svg>
</a>
:: Forking
<<script>>
UIBar.destroy();
<</script>>

[[E|Light Green]] [[n|Grey]] [[t|White]] [[e|Red]] [[r|Blue]] [[i|Saffron]] [[n|Yellow]] [[g|Black]] blindfolded to a garden of forked paths ,
Every wall is different, 
there is no distiction at all.
<<set $counter to 0>>

:: Light Green [green]

<<script>>
UIBar.destroy();
<</script>>
[img["data/Green.png"]]
<<set $counter to $counter + 1>>
<<if $counter is 4>><<goto "Oratory">><</if>>

Flowers and grass around [[everything|Grey]], 
that smile hidden behind the [[sunlight|Red]],
the [[eyes|White]] of a butterfly.


:: White [white]
[img["data/White.png"]]
<<script>>
UIBar.destroy();
<</script>>

<<set $counter to $counter + 1>>
<<if $counter is 4>><<goto "Oratory">><</if>>
The mocking smile of a kid,
feeling shy but everyone [[laughing|Red]],
everybody is a [[star|Light Green]].

:: Red [red]

<<script>>
UIBar.destroy();
<</script>>
[img["data/Red.png"]]
<<set $counter to $counter + 1>>
<<if $counter is 4>><<goto "Oratory">><</if>>
And suddenly you are [[yelling|Light Green]],
fire comes out of you [[throat|Yellow]],
your [[guts|Blue]] and your head are boiling.


:: Grey [grey]

<<script>>
UIBar.destroy();
<</script>>
[img["data/Gray.png"]]
<<set $counter to $counter + 1>>
<<if $counter is 4>><<goto "Oratory">><</if>>
Do you care about them?
Probably you think about it all the [[time|Light Green]],
helping would be [[silently|Blue]] appreciated.

:: Blue [blue]

<<script>>
UIBar.destroy();
<</script>>
[img["data/Blue.png"]]
<<set $counter to $counter + 1>>
<<if $counter is 4>><<goto "Oratory">><</if>>
Just [[look|Light Green]] [[away|Grey]],
that [[smell|Grey]] is [[unbearable|Saffron]],
the [[feeling|Black]] of being [[apart|Yellow]].


:: Black [black]

<<script>>
UIBar.destroy();
<</script>>
[img["data/Black.png"]]
<<set $counter to $counter + 1>>
<<if $counter is 4>><<goto "Oratory">><</if>>
A [[[thousand|Saffron]] whispers,
with a hundred [[mouths|Blue]],
climbing from your spine to your [[head|Yellow]].


:: Saffron [saffron]

<<script>>
UIBar.destroy();
<</script>>
[img["data/Saffron.png"]]
<<set $counter to $counter + 1>>
<<if $counter is 4>><<goto "Oratory">><</if>>
Stand against the [[unpredictable|Black]] faith,
battle the [[uncertain|Grey]],
do your [[will|Blue]].


:: Yellow [yellow]

<<script>>
UIBar.destroy();
<</script>>
[img["data/Yellow.png"]]
<<set $counter to $counter + 1>>
<<if $counter is 4>><<goto "Oratory">><</if>>
Is this feeling something [[new|Red]]?
An emotion you may [[lost|Blue]],
Unveiling [[curtains|Black]] under the rain.


:: Oratory

<<script>>
UIBar.destroy();
<</script>>

The ones before you,
the ones that will come after.
A shared path for leaving behind,
write and become part of this maze.

<input id= "oratory-input" placeholder="Leave something behind" size="30">

<<link [[What is that sound?|Alert]] >>

<<script>>
      
       let message =  document.getElementById('oratory-input').value;
      console.log(message);
       let theMessage ={
         "message": message

       }
      let jsonData = JSON.stringify(theMessage);

      fetch('/send',{
        method: 'POST',
        headers:{
          "Content-type": "application/json"
        },
        body: jsonData
      })
      .then(response=>response.json())
      .then(response =>{
        //console.log("response");
      });
     
 

<</script>>

<</link>>

:: Alert [alert]

<<script>>
UIBar.destroy();
<</script>>


There is something behind those walls
Is it footsteps?
Maybe voices?
It was a <span class="shakey">growl</span>
<div id="alert"></div>
<span id = "run">[[RUN|Tangled]]</span>



<<script>>

  let flag = false ;
  let timerId;
  let running = false ;
  timerId = setTimeout(run, 3000);
  console.log("starting timer");
  window.addEventListener('mousemove',stop);


function stop(){
  if(!flag&&!running){
     //clearTimeout(timerId);
      //timerId = setTimeout(run, 5000);
      //console.log("starting timer");
      var para = document.createElement("p");
      var node = document.createTextNode("Do not move");
      para.appendChild(node);
      var element = document.getElementById("alert");
      element.appendChild(para);
      flag= true;
  //dont move appear
  };
    
      console.log("moving")
     
      flag = false;

}

function run(){
    running = true;
    
    console.log("RUN");
   
    var element = document.getElementById("run");
      element.style.visibility = "visible";
      flag= true;
    
    //Run appear [[RUN|Tangled]]
  };


 

<</script>>

:: Tangled[tangled]

<<script>>
UIBar.destroy();
<</script>>

&emsp;&emsp;&emsp;&emsp;&emsp;  Se[[e|Alert]]ms &emsp;&emsp;&emsp;&emsp;&emsp; like 
&emsp;&emsp;&emsp;you&emsp;&emsp;&emsp;&emsp;&emsp;[[a|Door]]re
&emsp;&emsp;&emsp;&emsp;&emsp;&emsp;[[t|Rest]]angled &emsp;&emsp;&emsp;&emsp;&emsp;&emsp;up
 

:: Door [doors]
<<script>>
UIBar.destroy();
<</script>>

 Are you looking for an [[exit->Door1]]?

:: Door1 [door1]
<<script>>
UIBar.destroy();
<</script>>

There is something you must [[know->Door2]]

:: Door2 [door2]
<<script>>
UIBar.destroy();
<</script>>

There is [[no...->Door3]]

:: Door3 [door3]
<<script>>
UIBar.destroy();
<</script>>

[[EXIT->Alert]]

:: Rest
<<script>>
UIBar.destroy();
<</script>>

Stop there,
Take a last breath.

The maze is at the inside not behind the walls.

Wait until  the door opens.


<span class="breath">Just breathe</span>

<span class="appear_4">[[Lets go|String]]</span>

:: String [string]


<<script>>
UIBar.destroy();

<</script>>


[[Pull the thread|The Hall]]
   
:: The Hall
<ul id="messages"></ul>
<<script>>
UIBar.destroy();
<</script>>
 <<script>>
    let messageArray;
        fetch('/find',{
          method: 'GET',
          headers:{
            "Content-type": "application/json"
          },
          
        })
        .then(response=>response.json())
        .then(response =>{
          //console.log("response");
          messageArray = response;
          console.log(messageArray);
          for(let i = 0 ; i<messageArray.length; i++){
            var para = document.createElement("li");
            var node = document.createTextNode(messageArray[i].message);
            para.appendChild(node);
            var element = document.getElementById("messages");
            element.appendChild(para);
          }
        });
<</script>>
Did you found your trace?
Now you are [[out|Credits]] of the maze

:: Credits
<<script>>
UIBar.destroy();
<</script>>


By <a href="http://www.egarciaa.com">Enrique García-Alcalá</a>

[[Restart|Start]]





:: Styles [stylesheet]

body{
    background: black;
    font-family: courier;
}

@keyframes fade-in-out {
	0%,
	to {opacity: 0}
	50% {opacity: 1}
}

@keyframes fade-in {
	from {opacity:0},
	to {opacity: 1}
  
}
.anima_even {
  
  animation-name: fade-in-out;
  animation: fade-in-out 5s ease-in-out infinite alternate;
	-webkit-animation: fade-in-out 5s ease-in-out infinite alternate;
}

.anima_odd {
  
  animation-name: fade-in-out;
  animation: fade-in-out 6s ease-in-out infinite alternate;
	-webkit-animation: fade-in-out 6s ease-in-out infinite alternate;
}
.appear_1{
  animation-name: fade-in;
  animation: fade-in linear 10s;
  font-size: 30px;
 
}

.appear_2{
  animation-name: fade-in;
  animation: fade-in linear 12s;  
   font-size: 40px;
 
}

.appear_3{
  animation-name: fade-in;
  animation: fade-in linear 14s; 
   font-size: 50px; 
 
}

.appear_4{
  animation-name: fade-in;
  animation: fade-in linear 20s; 
   font-size: 25px; 
 
}

img{
    width: 45%;
    height: 45%;
    display: block;
    margin-left: auto;
    margin-right: auto;
    margin-bottom: 0px;
    }

.start{
  font-size: 20px;
  
}

.reveal{
  opacity: 0
}

.reveal:hover{
  
  opacity:1;
  transition:opacity 2s;
  
}

.candle{
  opacity: 75%;
  filter: brightness(0.6);
}

.content {
  align-items: center;
  display: flex;
  height: 50vh;
  justify-content: center;
  margin: 20px;
  max-width: 100%;
  width: 100vw;
}


div.hole{
  margin: 20px;
  font-size: 36px;
  border-size:20px;
}
.one {
  background-color: #364996 ;
}

.two {
  background-color: #253368;
}

.three {
  background-color: #1d2554;
}

.hole{
  height: 300vh;
}

.door{
position: absolute;
  bottom: 8px;
  right: 16px;
  font-size: 18px;
  top: 300vh;
}

.tunnel{
  
   
    margin-left: auto;
    margin-right: auto;
    margin-bottom: auto;
    margin-top:100px;
    align-items: center;
     display: flex;
 
  justify-content: center;
}



#run{
  visibility: hidden;
  font-size: 50px;

}

.tangled{
  
  font-size: 35px;
  margin-left: auto;
}

.doors{

  font-size: 50px;
  letter-spacing: 10px;



}

.door1{

  font-size : 60px;
  letter-spacing: 5px;

}

.door2{

  font-size : 70px;
  letter-spacing: 1px;

}

.door3{
  font-size: 100px;
  letter-spacing: -25px;
}

#svg2 {
    width: 100%;
    height: 45%;
    display: block;
    margin-left: auto;
    margin-right: auto;

    
    -webkit-animation: rotation 80s infinite linear;
    -moz-animation: rotation 80s infinite linear;
    -o-animation: rotation 80s infinite linear;
    animation: rotation 80s infinite linear;
    transform-origin: 50% 50%;
    -webkit-transform-origin: 50% 50%;
    -moz-transform-origin: 50% 50%;
}

@-webkit-keyframes rotation {
    from {-webkit-transform: rotate(0deg);}
    to   {-webkit-transform: rotate(359deg);}
}
@-moz-keyframes rotation {
    from {-moz-transform: rotate(0deg);}
    to   {-moz-transform: rotate(359deg);}
}
@-o-keyframes rotation {
    from {-o-transform: rotate(0deg);}
    to   {-o-transform: rotate(359deg);}
}
@keyframes rotation {
    from {transform: rotate(0deg);}
    to   {transform: rotate(359deg);}
}
@keyframes shake {
  10%, 90% {
    transform: translate3d(-1px, 0, 0);
  }
  
  20%, 80% {
    transform: translate3d(2px, 0, 0);
  }

  30%, 50%, 70% {
    transform: translate3d(-4px, 0, 0);
  }

  40%, 60% {
    transform: translate3d(4px, 0, 0);
  }
}
.shakey{
  color: gray;
}
.shakey:hover{
  animation: shake 0.82s cubic-bezier(.36,.07,.19,.97) both;
  transform: translate3d(0, 0, 0);
  backface-visibility: hidden;
  perspective: 1000px;
  font-size: 300px;
}

ul {
  box-sizing: border-box;
  overflow: hidden;
  perspective: 900px;
  list-style: none;
  height: 70vh;
  max-height: 1200px;
  min-height: 750px;
  text-align: center;
  margin-top: 0px;
  margin-bottom: 0px;
}

@keyframes width-sway {
  0%, 100% {
    width: 500px;
  }
  50% {
    width: 100%;
  }
}
li {
  position: absolute;
  top: 0;
  width: 100%;
  transform: translateY(100vh);
  font-size: 2.4em;
  font-weight: bold;
  animation: 12s spiral-staircase linear infinite;
}

li:nth-child(1) {
  animation-delay: 0s;
}

li:nth-child(2) {
  animation-delay: 2s;
}

li:nth-child(3) {
  animation-delay: 3s;
}

li:nth-child(4) {
  animation-delay: 4s;
}

li:nth-child(5) {
  animation-delay: 5s;
}

li:nth-child(6) {
  animation-delay: 6s;
}

li:nth-child(7) {
  animation-delay: 7s;
}

li:nth-child(8) {
  animation-delay: 8s;
}

li:nth-child(9) {
  animation-delay: 9s;
}

li:nth-child(10) {
  animation-delay: 10s;
}

li:nth-child(11) {
  animation-delay: 11s;
}

li:nth-child(12) {
  animation-delay: 12s;
}
li:nth-child(13) {
  animation-delay: 13s;
}
li:nth-child(14) {
  animation-delay: 14s;
}
li:nth-child(15) {
  animation-delay: 15s;
}
li:nth-child(16) {
  animation-delay: 16s;
}
li:nth-child(17) {
  animation-delay: 17s;
}
li:nth-child(18) {
  animation-delay: 18s;
}
li:nth-child(19) {
  animation-delay: 19s;
}
li:nth-child(20) {
  animation-delay: 20s;
}

li:nth-child(1) {
  right: 1rem;
}

li:nth-last-child(1) {
  right: 1rem;
}

li:nth-child(2) {
  right: 2rem;
}

li:nth-last-child(2) {
  right: 2rem;
}

li:nth-child(3) {
  right: 3rem;
}

li:nth-last-child(3) {
  right: 3rem;
}

li:nth-child(4) {
  right: 4rem;
}

li:nth-last-child(4) {
  right: 4rem;
}

li:nth-child(5) {
  right: 5rem;
}

li:nth-last-child(5) {
  right: 5rem;
}

li:nth-child(6) {
  right: 6rem;
}

li:nth-last-child(6) {
  right: 6rem;
}

li:nth-child(7) {
  right: 7rem;
}

li:nth-last-child(7) {
  right: 7rem;
}

li:nth-child(8) {
  right: 8rem;
}

li:nth-last-child(8) {
  right: 8rem;
}

li:nth-child(9) {
  right: 9rem;
}

li:nth-last-child(9) {
  right: 9rem;
}

li:nth-child(10) {
  right: 10rem;
}

li:nth-last-child(10) {
  right: 10rem;
}

@keyframes spiral-staircase {
  0% {
    transform: rotateY(90deg) translateY(105vh) rotate(0deg);
  }
  50% {
    transform: rotateY(0deg) translateY(50vh) rotate(0deg);
  }
  100% {
    transform: rotateY(-90deg) translateY(-5vh) rotate(0deg);
  }
}

#story{
  margin-top: 0px;
  margin-bottom: 0px;
}

a.string{

  color: red;
}